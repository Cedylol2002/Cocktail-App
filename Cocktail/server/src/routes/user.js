"use strict";
exports.__esModule = true;
exports.router = void 0;
var express_1 = require("express");
var user_1 = require("../controllers/user");
var validation_1 = require("../middleware/validation");
var passport = require("passport");
var yupValidiationModels_1 = require("../interfaces/yupValidiationModels");
var router = express_1.Router();
exports.router = router;
router.post('/register', validation_1["default"](yupValidiationModels_1.UserRegisterSchema), user_1["default"].register);
router.post('/login', validation_1["default"](yupValidiationModels_1.UserLoginSchema), user_1["default"].login);
router.post('/refreshToken', user_1["default"].refreshToken);
router.post('/logout', passport.authenticate('jwt', { session: false }), user_1["default"].logout);
router.get('/getuser', passport.authenticate('jwt', { session: false }), user_1["default"].getUser);
router.get('/allusers', passport.authenticate('jwt', { session: false }), user_1["default"].allUsers);
router.get('/find/:userId', passport.authenticate('jwt', { session: false }), user_1["default"].findUser);
router.post('/updateuser/:userId', passport.authenticate('jwt', { session: false }), user_1["default"].updateUser);
router.post('/changeName/:userId', passport.authenticate('jwt', { session: false }), validation_1["default"](yupValidiationModels_1.UserChangeNameSchema), user_1["default"].changeName);
router.post('/changePassword/:userId', passport.authenticate('jwt', { session: false }), validation_1["default"](yupValidiationModels_1.UserChangePasswordSchema), user_1["default"].changePassword);
